// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SimpleAuthorization.Infrastructure.Data;

#nullable disable

namespace SimpleAuthorization.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.9");

            modelBuilder.Entity("SimpleAuthorization.Core.Entities.Organization", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<long>("HeadOfOrgUserId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("head_of_org_user_id");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_organizations");

                    b.HasIndex("HeadOfOrgUserId")
                        .IsUnique()
                        .HasDatabaseName("ix_organizations_head_of_org_user_id");

                    b.ToTable("organizations", (string)null);
                });

            modelBuilder.Entity("SimpleAuthorization.Core.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Fio")
                        .HasColumnType("TEXT")
                        .HasColumnName("fio");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT")
                        .HasColumnName("login");

                    b.Property<long?>("OrganizationId")
                        .HasColumnType("INTEGER")
                        .HasColumnName("organization_id");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("TEXT")
                        .HasColumnName("password_hash");

                    b.Property<string>("UserRole")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Administartor")
                        .HasColumnName("user_role");

                    b.Property<string>("UserStatus")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValue("Active")
                        .HasColumnName("user_status");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("OrganizationId")
                        .HasDatabaseName("ix_users_organization_id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("SimpleAuthorization.Core.Entities.Organization", b =>
                {
                    b.HasOne("SimpleAuthorization.Core.Entities.User", "HeadOfOrgUser")
                        .WithOne("HeadOf")
                        .HasForeignKey("SimpleAuthorization.Core.Entities.Organization", "HeadOfOrgUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_organizations_users_head_of_org_user_id1");

                    b.Navigation("HeadOfOrgUser");
                });

            modelBuilder.Entity("SimpleAuthorization.Core.Entities.User", b =>
                {
                    b.HasOne("SimpleAuthorization.Core.Entities.Organization", "Organization")
                        .WithMany("Users")
                        .HasForeignKey("OrganizationId")
                        .HasConstraintName("fk_users_organizations_organization_id");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("SimpleAuthorization.Core.Entities.Organization", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SimpleAuthorization.Core.Entities.User", b =>
                {
                    b.Navigation("HeadOf")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
